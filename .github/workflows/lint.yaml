name: Lint and Build

on:
  push:
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Checkout code
        uses: actions/checkout@v3

      - name: GolangCI Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  build:
    name: Build
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build
        run: go build cmd/auth/main.go
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
          HOST: ${{ secrets.HOST }}
          ENV: ${{ secrets.ENV }}
          SECRET: ${{ secrets.SECRET }}
          AES: ${{ secrets.AES }}
          GODOTENV: ${{ secrets.GODOTENV }}
          FIBER_PREFORK: ${{ secrets.FIBER_PREFORK }}
          MAX_CPU: ${{ secrets.MAX_CPU }}
          LOG_OUTPUT: ${{ secrets.LOG_OUTPUT }}
          LOG_CW: ${{ secrets.LOG_CW }}
          LOG_FILE: ${{ secrets.LOG_FILE }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_TSR: ${{ secrets.SENTRY_TSR }}
          SECURE_COOKIE: ${{ secrets.SECURE_COOKIE }}
          TTL_ACCESS: ${{ secrets.TTL_ACCESS }}
          TTL_REFRESH: ${{ secrets.TTL_REFRESH }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_SSLMODE: ${{ secrets.DB_SSLMODE }}